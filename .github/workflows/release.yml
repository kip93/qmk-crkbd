name: Release

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'keymap/**'
      - 'QMK'
      - 'shell.nix'
      - '.github/workflows/release.yml'
  workflow_dispatch: {}

concurrency:
  group: release

jobs:
  compile-and-release:
    name: Compile & release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Nix
        uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Set up cache
        uses: cachix/cachix-action@v10
        with:
          name: kip93
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
          skipPush: true

      - name: Print nixpkgs version
        run: |
          nix-instantiate --eval -E '"nixpkgs version: ${(import <nixpkgs> {}).lib.version}"'

      - name: Compile
        run: |
          nix-shell --pure --run compile

      - name: Create tag
        id: tag
        run: |
          TAG="$(date '+v%y.%m.%d.%H%M%S')${{ github.ref != 'refs/heads/main' && '-RC' || '' }}"
          git tag "${TAG}"
          git push --tags
          printf 'Tagged: %s -> %s.\n\n' "$(git rev-parse HEAD)" "${TAG}"

          printf '::set-output name=tag::%s\n' "${TAG}"

      - name: Create changelog
        run: |
          printf 'Reference:\n'
          printf '%s.\n\n' "${GITHUB_REF}"

          printf 'Latest tags:\n'
          git fetch --tags
          git tag -l --sort=-version:refname | head -10
          printf '\n'
          printf 'Latest full release tags:\n'
          git tag -l --sort=-version:refname | grep -P '^v\d{2}\.\d{2}\.\d{2}\.\d{6}$' | head -10
          printf '\n'

          printf 'Changelog:\n'
          if [ "${GITHUB_REF_NAME}" = 'main' ] && [ "$(git tag -l | grep -P '^v\d{2}\.\d{2}\.\d{2}\.\d{6}$' | wc -l)" -ge 2 ] ; then
            LAST_TAG="$(git tag -l --sort=-version:refname | grep -P '^v\d{2}\.\d{2}\.\d{2}\.\d{6}$' | sed -n '2{p;q;}')"
          elif [ "$(git tag -l | wc -l)" -ge 2 ] ; then
            LAST_TAG="$(git tag -l --sort=-version:refname | sed -n '2{p;q;}')"
          else
            LAST_TAG="$(git rev-list --max-parents=0 HEAD)"
          fi
          printf '%s...%s\n\n' "${{ steps.tag.outputs.tag }}" "${LAST_TAG}"

          printf '[Full changelog]' >>'.build/CHANGELOG.md'
          printf '(%s/%s/compare/' "${GITHUB_SERVER_URL}" "${GITHUB_REPOSITORY}" >>'.build/CHANGELOG.md'
          printf '%s...%s)\n\n' "${LAST_TAG}" "${{ steps.tag.outputs.tag }}" >>'.build/CHANGELOG.md'

          printf '[Commits to %s since this release]' "${GITHUB_REF_NAME}" >>'.build/CHANGELOG.md'
          printf '(%s/%s/compare/' "${GITHUB_SERVER_URL}" "${GITHUB_REPOSITORY}" >>'.build/CHANGELOG.md'
          printf '%s...%s)\n\n' "${{ steps.tag.outputs.tag }}" "${GITHUB_REF_NAME}" >>'.build/CHANGELOG.md'

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./.build/firmware.hex
          fail_on_unmatched_files: true
          name: ${{ steps.tag.outputs.tag }}
          tag_name: ${{ steps.tag.outputs.tag }}
          body_path: .build/CHANGELOG.md
          prerelease: ${{ github.ref != 'refs/heads/main' }}

      - name: Push to cache
        run: |
          nix-shell --pure shell.nix --run :
          nix-shell --pure QMK/shell.nix --run :
          nix-store -qR --include-outputs $(nix-instantiate shell.nix QMK/shell.nix 2>/dev/null) | cachix push kip93
