name: Check code quality

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'keymap/**'
      - 'QMK'
      - '**/*.nix'
      - '.github/workflows/check.yml'
  workflow_dispatch: {}

jobs:
  check:
    name: Check code quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ./repo

      - name: "Nix: set up"
        uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command

      - name: "Nix: cache set up"
        uses: cachix/cachix-action@v10
        with:
          name: kip93
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
          skipPush: true

      - name: "Nix: version"
        run: |
          nix-instantiate --eval -E '"nixpkgs version: ${(import <nixpkgs> {}).lib.version}"'
          nix-env --version

      - name: "Nix: format"
        id: nix-format
        working-directory: ./repo
        run: |
          nix-build scripts/nix-format.nix | xargs sh -c
        continue-on-error: true

      - name: "Nix: lint"
        id: nix-lint
        working-directory: ./repo
        run: |
          nix-build scripts/nix-lint.nix | xargs sh -c
        continue-on-error: true

      - name: "Nix: shellcheck"
        id: nix-shellcheck
        working-directory: ./repo
        run: |
          nix-build scripts/nix-shellcheck.nix | xargs sh -c
        continue-on-error: true

      - name: "Nix: vulnerabilities"
        id: nix-vulnerabilities
        working-directory: ./repo
        run: |
          nix-build scripts/nix-vulnerabilities.nix | xargs sh -c
        continue-on-error: true

      - name: "Nix: logic"
        id: nix-logic
        working-directory: ./repo
        run: |
          nix-build scripts/nix-logic.nix | TMPDIR=../tmp xargs sh -c
        continue-on-error: true

      - name: "QMK: format"
        id: qmk-format
        working-directory: ./repo
        run: |
          nix-build scripts/qmk-format.nix | xargs sh -c
        continue-on-error: true

      - name: "QMK: lint"
        id: qmk-lint
        working-directory: ./repo
        run: |
          nix-build scripts/qmk-lint.nix | xargs sh -c
        continue-on-error: true

      - name: Check for failures
        if: |
          steps.nix-format.outcome          != 'success' ||
          steps.nix-lint.outcome            != 'success' ||
          steps.nix-shellcheck.outcome      != 'success' ||
          steps.nix-vulnerabilities.outcome != 'success' ||
          steps.nix-logic.outcome           != 'success' ||
          steps.qmk-format.outcome          != 'success' ||
          steps.qmk-lint.outcome            != 'success'
        run: exit 1

      - name: Push to cache
        working-directory: ./repo
        run: |
          nix-build scripts/nix-cache.nix | xargs -I{} sh -c '{}' kip93
